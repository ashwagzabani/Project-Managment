[{"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\index.js":"1","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\App.js":"2","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\reportWebVitals.js":"3","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Task\\CreateNewTask.js":"4","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Sidebar.js":"5","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Forms.js":"6","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Login.js":"7","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\SignUp.js":"8","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Home.js":"9","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\UpdateProject.js":"10","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\DeletProject.js":"11","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\ApiConfig.js":"12","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Member\\Members.js":"13","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\ProjectsList.js":"14","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\CreateNewproject.js":"15","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\ProjectDetails.js":"16","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Task\\Tasks.js":"17","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Member\\AddMembers.js":"18"},{"size":494,"mtime":1611731039880,"results":"19","hashOfConfig":"20"},{"size":1397,"mtime":1612295492239,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1611731039886,"results":"22","hashOfConfig":"20"},{"size":1422,"mtime":1612273218310,"results":"23","hashOfConfig":"20"},{"size":4746,"mtime":1612337484998,"results":"24","hashOfConfig":"20"},{"size":1485,"mtime":1612273218234,"results":"25","hashOfConfig":"20"},{"size":2925,"mtime":1612295492271,"results":"26","hashOfConfig":"20"},{"size":4023,"mtime":1612363912001,"results":"27","hashOfConfig":"20"},{"size":460,"mtime":1612295492241,"results":"28","hashOfConfig":"20"},{"size":3875,"mtime":1612332334295,"results":"29","hashOfConfig":"20"},{"size":580,"mtime":1612332334073,"results":"30","hashOfConfig":"20"},{"size":266,"mtime":1612360446427,"results":"31","hashOfConfig":"20"},{"size":1721,"mtime":1612338073371,"results":"32","hashOfConfig":"20"},{"size":1648,"mtime":1612386852671,"results":"33","hashOfConfig":"20"},{"size":12427,"mtime":1612333159075,"results":"34","hashOfConfig":"20"},{"size":5126,"mtime":1612337762987,"results":"35","hashOfConfig":"20"},{"size":1477,"mtime":1612295492404,"results":"36","hashOfConfig":"20"},{"size":3700,"mtime":1612357336528,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"f7353r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\index.js",[],["84","85"],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\App.js",["86","87","88","89","90","91","92","93"],"\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n// import \"./form.css\";\r\nimport Form from \"./components/Forms\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport CreateNewTask from \"./components/Task/CreateNewTask\";\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    //signUp faild\r\n    this.state = {\r\n      loggedIn: true,\r\n      userName: \"\",\r\n      userId: \"\",\r\n      projectList: [],\r\n    };\r\n    this.loginHandler = this.loginHandler.bind(this);\r\n    this.handelProject = this.handelProject.bind(this);\r\n  }\r\n  loginHandler = (Id) => {\r\n    // const userId = this.state.userId;\r\n    this.setState({ userId: Id });\r\n  };\r\n  handelProject = (lest) => {\r\n    const projectList = this.state.projectList.slice();\r\n    projectList.push(lest);\r\n    this.setState({ projectList });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{/* <Form loginHandler={this.loginHandler} /> */}</div>\r\n        <div>\r\n          <Sidebar\r\n            userId={this.state.userId}\r\n            projectList={this.handelProject}\r\n            loginHandler={this.loginHandler}\r\n            userId={this.state.userId}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\reportWebVitals.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Task\\CreateNewTask.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Sidebar.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Forms.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Login.js",["94"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport API_URL from \"../ApiConfig\";\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isLogged: false,\r\n      userId: \"\",\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.getEmail = this.getEmail.bind(this);\r\n    this.getPassword = this.getPassword.bind(this);\r\n  }\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const loginInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    axios.post(`${API_URL}/login`,loginInfo).then((res) => {\r\n      console.log(\"Response Data:\", res.data);\r\n      if (res.data === \"Login successful!\") {\r\n        alert(\"Correct email and password\");\r\n        this.setState({ userId: res.data._id });\r\n        this.setState({ isLogged: true });\r\n      }\r\n      if (res.data === \"Password is not correct\") {\r\n        alert(\"Wrong Password\");\r\n      }\r\n      if (res.data === \"Email does not exist\") {\r\n        alert(\"Email does not exist\");\r\n      }\r\n    });\r\n  };\r\n  getEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n    console.log(this.state.email);\r\n  };\r\n  getPassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n    console.log(this.state.password);\r\n  };\r\n  getData = (e) => {\r\n    e.stopPropagation();\r\n    this.props.loginHandler(this.state.userId);\r\n    console.log(this.props.loginHandler(this.state.email));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n      {this.state.isLogged ? (\r\n        // <Redirect to=\"/\" />\r\n        ''\r\n      ) : (\r\n      <div>\r\n        <div className=\"form-div\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <h3>Sign In</h3>\r\n            <label>Email address</label> <br />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email \"\r\n              onChange={(e) => {\r\n                this.getEmail(e);\r\n              }}\r\n              value={this.email}\r\n              className=\"form-control-from-group\"\r\n            />\r\n            <br />\r\n            <label>Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password \"\r\n              onChange={(e) => {\r\n                this.getPassword(e);\r\n              }}\r\n              value={this.password}\r\n              className=\"form-control-from-group\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-danger btn-black\"\r\n              value=\"Log in\"\r\n              onClick={(e) => this.getData(e)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n        )}\r\n        </>\r\n      );  \r\n  }\r\n}\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\SignUp.js",["95"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport API_URL from \"../ApiConfig\";\r\nimport Sidebar from \"./Sidebar\";\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    }\r\n    this.changeUserName = this.changeUserName.bind(this);\r\n    this.changeEmail = this.changeEmail.bind(this);\r\n    this.changepassword = this.changepassword.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  changeUserName = (event) => {\r\n    //change userName by user name that write it by user\r\n    this.setState({\r\n      userName: event.target.value,\r\n    });\r\n  };\r\n  //change changeEmail by user email that write it by user\r\n  changeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n  //change changepassword by user password that write it by user\r\n  changepassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n  //after user Submit the data\r\n  onSubmit = (event) => {\r\n    /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n    event.preventDefault();\r\n    //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\r\n    //we need to send that into back end all data from front into back end by axiod\r\n    const registered = {\r\n      userName: this.state.userName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    //we need to post that data into server\r\n    //post registered to this endPoint which back end (Schema) - to MongoDB\r\n    axios.post(`${API_URL}/signUp`, registered).then((res) => {\r\n      console.log(\"Response Data:\", res);\r\n      if (res.data === \"Already Exist\") {\r\n        alert(\"You Already have account please login\");\r\n      }\r\n      if (res.data._message === \"User validation failed\") {\r\n        alert(\"Error!!\");\r\n      } else {\r\n        alert(\"Welcome\");\r\n        console.log(\"User Data\", registered);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <h3>Sign Up</h3>\r\n            <div className=\"form-group\">\r\n              <label>User Name</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"User Name \"\r\n                onChange={(e) => {\r\n                  this.changeUserName(e);\r\n                }}\r\n                value={this.state.userName}\r\n                className=\"form-control-from-group\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email \"\r\n                onChange={(e) => {\r\n                  this.changeEmail(e);\r\n                }}\r\n                value={this.state.email}\r\n                className=\"form-control-from-group\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password \"\r\n                onChange={(e) => {\r\n                  this.changepassword(e);\r\n                }}\r\n                value={this.state.password}\r\n                className=\"form-control-from-group\"\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-danger btn-black\"\r\n              value=\"Sign Up\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Home.js",["96","97","98","99"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Swich, Link } from \"react-router-dom\";\r\nimport CreateNewproject from './project/CreateNewproject'\r\nimport ProjectsList from \"./project/ProjectsList\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>welcome</h1>\r\n        <Link to=\"/newProject\">New Project</Link>\r\n        <ProjectsList />\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\UpdateProject.js",["100","101","102"],"import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport API_URL from \"../../ApiConfig\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectid: props.location.state.id,\r\n            projectTitle: props.location.state.title,\r\n            projectStartDate: props.location.state.startDate,\r\n            projectEndDate: props.location.state.endDate,\r\n            newData: {},\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    getChangeData = (event) => {\r\n        let fieldName = event.target.name;\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        console.log(this.state[fieldName]);\r\n    }\r\n\r\n    saveChnages = (event) => {\r\n        event.preventDefault();\r\n        const newData = {\r\n            \"title\": this.state.projectTitle,\r\n            \"startDate\": this.state.projectStartDate,\r\n            \"endDate\": this.state.projectEndDate\r\n        };\r\n        axios.patch(`${API_URL}/project/${this.state.projectid}`, newData)\r\n            .then(res => {\r\n                console.log('Response Data:', res.data)\r\n                this.setState({\r\n                    newData: res.data,\r\n                    redirect: true\r\n                })\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(\"ERROR:\", error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: `/project/details/${this.state.projectid}`\r\n                , state: { projectDetils: this.state.newData }\r\n            }\r\n            } />;\r\n        }\r\n        console.log(this.state.projectEndDate);\r\n        return (\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header\">Update Project Details</h3>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.saveChnages}>\r\n                        <fieldset>\r\n                            <div class=\"form-group\">\r\n                                <label>Project title</label>\r\n                                <input type=\"text\" name=\"projectTitle\" class=\"form-control\" defaultValue={this.state.projectTitle} onChange={this.getChangeData} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Start Date</label>\r\n                                <input type=\"date\" name=\"projectStartDate\" class=\"form-control\" defaultValue={this.state.projectStartDate} onChange={this.getChangeData} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>End Date</label>\r\n                                <input type=\"date\" class=\"form-control\" name=\"projectEndDate\" defaultValue={this.state.projectEndDate} onChange={this.getChangeData} />\r\n                            </div>\r\n\r\n                            <div className=\"card-footer\">\r\n                                <Link to=\"/\" className=\"btn btn-default\">Cancel</Link>\r\n                                {/* <Link to={{ pathname: `/project/details/${this.state.projectid}`, state: { projectDetils: this.state.newData } }} className=\"btn btn-success\" >Save</Link> */}\r\n                                {/* <Link to={{ pathname: `/project/details/${this.state.projectid}`, state: { projectDetils: this.state.newData } }} className=\"btn btn-success\" >Save</Link> */}\r\n                                <button type=\"submit\" className=\"btn btn-danger\" >Save</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProject;\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\DeletProject.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\ApiConfig.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Member\\Members.js",[],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\ProjectsList.js",["103","104","105"],"C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\CreateNewproject.js",["106","107","108","109","110"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport Apiconfig from '../../ApiConfig'\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { BrowserRouter as Router, Route, Swich, Link, Redirect } from \"react-router-dom\";\r\n\r\nexport default class CreateNewproject extends Component {\r\n    constructor() {\r\n        super();\r\n        //projects\r\n        this.state = {\r\n            title: '',\r\n            role: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            status: '',\r\n            userName: '',\r\n            temporaryMembersListForDb: [{\r\n                userId: \"60168e71bff7b6488838bb04\",\r\n                role: \"manager\"\r\n            }],\r\n            temporaryMembersList: [],\r\n            member: ''\r\n\r\n        };\r\n\r\n    }\r\n    //after user Submit the data\r\n    onSubmit = (e) => {\r\n        /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n        e.preventDefault();\r\n\r\n        //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\r\n        //we need to send that into back end all data from front into back end by axios\r\n        const newProject = {\r\n            title: this.state.title,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            members: this.state.temporaryMembersListForDb,\r\n            redirect: false\r\n        };\r\n        //we need to post that data into server\r\n        //post registered to this endPoint which back end (Schema) - to MongoDB\r\n        axios.post(`${Apiconfig}/project/new`, newProject).then((res) => {\r\n            alert('Project added successfully')\r\n            console.log(\"Project Data:\", newProject);\r\n            this.setState({ redirect: true })\r\n        });\r\n\r\n\r\n    }\r\n    //Add user into Project\r\n    AddUser = (e) => {\r\n        /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n        e.preventDefault()\r\n        const memberUserName = { userName: this.state.userName };\r\n        //check if input feild empty \r\n        if (memberUserName.userName === '') {\r\n            alert('No member Selected')\r\n        } else {\r\n            // let copyMembers = [...this.state.members]\r\n            axios.get(`${Apiconfig}/user/check/${this.state.userName}`, memberUserName).then((res) => {\r\n                if (res.data.responseMessage === 'The user is there') {\r\n                    console.log('The user data', res.data.userDetails)\r\n                    const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n                    const membersIndex = temporaryMembersListForDb.findIndex(item => item.userId === res.data.userDetails._id);\r\n                    console.log(membersIndex);\r\n                    membersIndex > -1 ? alert(\"the user already added\") : (\r\n                        this.setState({\r\n                            member: res.data.userDetails,\r\n                            temporaryMembersList: this.state.temporaryMembersList.concat(res.data.userDetails,)\r\n\r\n                        }))\r\n                    // alert(this.state.userName + 'added successfully')\r\n                    // copyMembers.push(this.state.userName)\r\n                    // this.setState({ members: copyMembers })\r\n                    console.log(res.data.userDetails._id);\r\n                    // this.state.members.map(m =>{\r\n                    //     console.log(m);\r\n\r\n                    // })\r\n                    this.AddMember();\r\n                }\r\n                else {\r\n                    alert(res.data)\r\n                }\r\n                console.log(res.data)\r\n\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    //updateProject\r\n    updateProject = () => {\r\n        axios.put(`${Apiconfig}/addMembers/${this.state.title}`, { members: this.state.temporaryMembersList }).then((res) => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    AddMember = () => {\r\n        const memebr = {\r\n            userId: this.state.member._id,\r\n            role: \"member\"\r\n        };\r\n        console.log(\"memebr\", memebr);\r\n        const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n        const membersIndex = temporaryMembersListForDb.findIndex(item => item.userId === memebr.userId);\r\n        console.log(membersIndex);\r\n        membersIndex === -1 ? temporaryMembersListForDb.push(memebr) : console.log(\"the user already added\");\r\n        this.setState({ temporaryMembersListForDb });\r\n        // console.log(\"object\");\r\n        // this.setState({\r\n        //     temporaryMembersList: getTemporaryMembersList.concat({\r\n        //         userId: this.state.member._id\r\n        //     }),\r\n        //     member: ''\r\n        // })\r\n        console.log(this.state.temporaryMembersListForDb);\r\n        // const membersList = this.state.temporaryMembersList;\r\n        // console.log(membersList);\r\n    }\r\n\r\n    removeMember = (member) => {\r\n        // console.log(member);\r\n        const temporaryMembersList = this.state.temporaryMembersList.slice();\r\n        // console.log(temporaryMembersList);\r\n        const membersIndex = temporaryMembersList.findIndex(item => item.userName === member.userName);\r\n        // console.log(\"index:\", membersIndex)\r\n        membersIndex > -1 ? temporaryMembersList.splice(membersIndex, 1) : console.log(\"not there\");\r\n        // console.log(temporaryMembersList);\r\n\r\n        const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n        // console.log(typeof memebr);\r\n        const memberIndex = temporaryMembersListForDb.findIndex(item => item.userId === member._id);\r\n        // console.log(\"memberIndex\", memberIndex);\r\n        memberIndex > -1 ? temporaryMembersListForDb.splice(membersIndex, 1) : console.log(\"the user already added\");\r\n        this.setState({\r\n            temporaryMembersList,\r\n            temporaryMembersListForDb\r\n        });\r\n        // console.log(temporaryMembersListForDb);\r\n        // console.log(temporaryMembersList);\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const membersList = this.state.temporaryMembersList;\r\n        // console.log(membersList);\r\n        const showList = membersList.length !== 0 ? membersList.map((member, index) => {\r\n            return (\r\n                <div className=\"memberList list-group-item\">\r\n                    <p>{member.userName}</p>\r\n                    <a href=\"#\"><i class=\"fa fa-trash\" onClick={() => this.removeMember(member)}></i></a>\r\n                </div>\r\n            )\r\n        }) : \"No members\";\r\n        // console.log(this.state.temporaryMembersList);\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">New Project</h3>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"ProjectName\">Project Name </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            title: e.target.value,\r\n                                        });\r\n                                    }}\r\n                                    value={this.state.title}\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"startDate \">Start Date</label>\r\n                                <input type=\"date\" name=\"start date\" onChange={(e) => {\r\n                                    this.setState({\r\n                                        startDate: e.target.value,\r\n                                    });\r\n                                }} value={this.state.startDate}\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"EndDate\">End Date</label>\r\n                                <input type=\"date\" name=\"end date\" onChange={(e) => {\r\n                                    this.setState({\r\n                                        endDate: e.target.value,\r\n                                    });\r\n                                }} value={this.state.endDate}\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"card-footer\">\r\n\r\n                                <form >\r\n                                    <h4>Add Project Team</h4>\r\n\r\n                                    <label for=\"addUser\">User Name</label>\r\n                                    <div className=\"form-inline mx-sm-3 mb-2\">\r\n                                        <input type=\"text\" onChange={(e) => {\r\n                                            this.setState({\r\n                                                userName: e.target.value,\r\n                                                member: ''\r\n                                            });\r\n                                        }} value={this.state.userName}\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                        {\" \"}\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-danger\"\r\n                                            value=\"Add\"\r\n                                            onClick={this.AddUser}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n                                    {/* {this.state.member !== '' ?\r\n                            <div>\r\n                                <span>{this.state.userName}</span>\r\n                                {/* <input className=\"btn btn-danger btn-black\" value=\"add\" onClick={this.AddMember} /> */}\r\n                                    {/* </div> */}\r\n                                    {/* : null} */}\r\n                                    <div class=\"list-group\">\r\n                                        {showList == \"No members\" ? null : showList}\r\n                                    </div>\r\n                                </form>\r\n                                <div className=\"card-footer\">\r\n                                    <Link\r\n                                        to=\"/\"\r\n                                        className=\"btn btn-default\"\r\n                                    >Cancel</Link>\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-danger btn-black\"\r\n                                        value=\"Submit\"\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {/* <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-danger btn-black\"\r\n                        value=\"Update Project\" onClick={this.updateProject}\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\project\\ProjectDetails.js",["111","112","113","114","115","116","117","118"],"import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Members from '../Member/Members';\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"../../App.css\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Tasks from '../Task/Tasks';\r\nimport AddMembers from '../Member/AddMembers';\r\nimport DeletProject from './DeletProject';\r\nclass ProjectDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projecsDetails: props.location.state.projectDetils,\r\n      userLoggedInId: '60115b690ba0311c388c9aa8',\r\n      showAddMemberForm: false,\r\n      showAddTaskForm: false\r\n    };\r\n  }\r\n\r\n  deleteMember = (id) => {\r\n    console.log(\"delete btn clicked\");\r\n    <DeletProject id={id} />\r\n  }\r\n  updateMember = (index) => {\r\n    console.log(\"update btn clicked\");\r\n  }\r\n\r\n  showAddMemberForm = (show) => {\r\n    this.setState({ showAddMemberForm: show })\r\n    console.log(this.state.showAddMemberForm);\r\n  }\r\n\r\n  showAddTaskForm = () => {\r\n    this.setState({ showAddTaskForm: true })\r\n  }\r\n\r\n  render() {\r\n    let isUserLoggedInManager = false;\r\n    let managerName = '';\r\n    const getDetails = this.state.projecsDetails.members;\r\n    const showAllProjectsDetails = getDetails !== undefined ? getDetails.length !== 0 ? getDetails.map((member) => {\r\n      if (member.userId === this.state.userLoggedInId && member.role === 'manager') {\r\n        isUserLoggedInManager = true;\r\n        managerName = <Members userId={member.userId} />\r\n      }\r\n      return (\r\n        <tr>\r\n          <td><Members userId={member.userId} /></td>\r\n          <td><Tasks userId={member.userId} projectId={this.state.projecsDetails._id} /></td>\r\n          { isUserLoggedInManager ? (<td ><a href=\"#\" onClick={() => this.deleteMember(member.userId)}><i className=\"fa fa-trash\"></i></a></td>) : <td></td>}\r\n          { isUserLoggedInManager ? (<td ><a href=\"#\" onClick={() => this.updateMember(this.state.projecsDetails._id)}><i className=\"fa fa-edit\"></i></a></td>) : <td></td>}\r\n        </tr >\r\n      );\r\n    }) : \"\" : \"\";\r\n\r\n    var startDate = new Date(this.state.projecsDetails.startDate);\r\n    var dd = String(startDate.getDate() + 1).padStart(2, '0');\r\n    var mm = String(startDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = startDate.getFullYear();\r\n\r\n    startDate = yyyy + '-' + mm + '-' + dd;\r\n\r\n    var endtDate = new Date(this.state.projecsDetails.endDate);\r\n    var dd = String(endtDate.getDate() + 1).padStart(2, '0');\r\n    var mm = String(endtDate.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = endtDate.getFullYear();\r\n\r\n    endtDate = yyyy + '-' + mm + '-' + dd;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>{this.state.projecsDetails.title}</h3>\r\n            {isUserLoggedInManager ? (\r\n              <div><Link to={{\r\n                pathname: \"/project/update\", state: {\r\n                  id: this.state.projecsDetails._id,\r\n                  title: this.state.projecsDetails.title,\r\n                  startDate: startDate,\r\n                  endDate: endtDate\r\n                }\r\n              }}>\r\n                <i className=\"fa fa-trash\">\r\n                </i>\r\n              </Link>\r\n                {\" \"}\r\n                {isUserLoggedInManager ? (\r\n                  <Link to={{\r\n                    pathname: \"/project/update\", state: {\r\n                      id: this.state.projecsDetails._id,\r\n                      title: this.state.projecsDetails.title,\r\n                      startDate: startDate,\r\n                      endDate: endtDate\r\n                    }\r\n                  }}>\r\n                    <i className=\"fa fa-edit\">\r\n                    </i>\r\n                  </Link>\r\n                ) : null}\r\n              </div>) : null}\r\n\r\n\r\n\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {/* <p>{this.state.projecsDetails.startDate}</p> */}\r\n            <div className=\"details\">\r\n              <p>Start Date: {startDate}</p>\r\n              <p>End Date: {endtDate}</p>\r\n              <p>Manager: {managerName}</p>\r\n            </div>\r\n\r\n\r\n            {this.state.showAddMemberForm ? '' :\r\n              <button className=\"btn btn-danger\" onClick={() => this.showAddMemberForm(true)}>Add Member</button>\r\n            }\r\n            {this.state.showAddMemberForm ? <AddMembers projectId={this.state.projecsDetails._id} showAddMemberForm={this.showAddMemberForm} /> : \"\"}\r\n\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.showAddTaskForm()}\r\n            >\r\n              Add Task\r\n                </button>\r\n\r\n            <table className=\"table\">\r\n              <tr>\r\n                <th>Team Members</th>\r\n                <th>Tasks</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n              {showAllProjectsDetails}\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetails;\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Task\\Tasks.js",["119"],"import React, { Component } from 'react';\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            projectId: props.projectId,\r\n            userId: props.userId,\r\n            allProjectTasksDetails: []\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.getAllProjectTasks();\r\n    };\r\n\r\n    getAllProjectTasks = () => {\r\n        axios\r\n            .get(`${API_URL}/tasks/project/${this.state.projectId}`)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                this.setState({ allProjectTasksDetails: res.data });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"ERROR:\", error);\r\n            });\r\n        // return (<td>this.state.memberDetails.userName</td>)\r\n    }\r\n    render() {\r\n        const allProjectTasksDetails = this.state.allProjectTasksDetails;\r\n        const allMemberTasks = allProjectTasksDetails.length === 0 ? '' : (allProjectTasksDetails.map((task, index) => {\r\n            if (task.userId === this.state.userId) {\r\n                console.log(task.title);\r\n                return (\r\n                    <p>{task.title}</p>\r\n\r\n                )\r\n            }\r\n        }));\r\n        return (\r\n            <div>\r\n                {/* <p>hello</p> */}\r\n                {allMemberTasks}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tasks;\r\n","C:\\Users\\ashwag\\Desktop\\SEI - 14\\projects\\project 3 - branch\\Project3\\front_end\\src\\components\\Member\\AddMembers.js",["120"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Apiconfig from '../../ApiConfig'\r\nexport default class AddMembers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            members: [],\r\n            projectId: props.projectId\r\n        }\r\n    }\r\n    //Add user into Project\r\n    AddUser = (e) => {\r\n        /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n        e.preventDefault()\r\n        let copyMembers = [...this.state.members]\r\n        axios.post(`${Apiconfig}/userss`, this.state.userName).then((res) => {\r\n            if (res.data === 'Already Exist') {\r\n                console.log('Email:', this.state.userName)\r\n                alert(this.state.userName + 'added successfully')\r\n                copyMembers.push(this.state.userName)\r\n                this.setState({ members: copyMembers })\r\n            }\r\n            else {\r\n                alert(this.state.userName + ' Error! invalid emai')\r\n            }\r\n        });\r\n        \r\n    }\r\n    //updateProject\r\n    updateProject = () => {\r\n        axios.patch(`${Apiconfig}/members/new/${this.state.projectId}`, { members: this.state.members, userName: this.state.userName }).then((res) => {\r\n            console.log(res)\r\n            console.log(res.body)\r\n        })\r\n    }\r\n\r\n    showAddMemberForm = () => {\r\n        this.props.showAddMemberForm(false);\r\n    }\r\n    render() {\r\n        let allMembers = this.state.members.map((member) => {\r\n            return <td>member</td>\r\n\r\n        });\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"head\">\r\n                        <h4>Add New Member</h4>\r\n                        <a href=\"#\"><i className=\"fa fa-times\" onClick={this.showAddMemberForm}></i></a>\r\n                    </div>\r\n\r\n                    <form onSubmit={this.AddUser}>\r\n\r\n                        {/* <label for=\"projectId\">Project Name:</label>\r\n                        <input type=\"text\" onChange={(e) => {\r\n                            this.setState({\r\n                                projectId: e.target.value,\r\n                            });\r\n                        }} value={this.state.projectId} /> */}\r\n\r\n\r\n                        <label for=\"addUser\">User Email:</label>\r\n                        <input type=\"text\" onChange={(e) => {\r\n                            this.setState({\r\n                                userName: e.target.value,\r\n                            });\r\n                        }} value={this.state.userName} />\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-danger btn-black\"\r\n                            value=\"check user\"\r\n                        />\r\n\r\n\r\n\r\n                    </form>\r\n                    <table>\r\n                        <tr>\r\n                            <td>{allMembers}</td>\r\n                        </tr>\r\n                    </table>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-danger btn-black\"\r\n                        value=\"Add Team Members\" onClick={this.updateProject}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":12},{"ruleId":"125","severity":1,"message":"129","line":8,"column":10,"nodeType":"127","messageId":"128","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"130","line":9,"column":27,"nodeType":"127","messageId":"128","endLine":9,"endColumn":33},{"ruleId":"125","severity":1,"message":"131","line":9,"column":35,"nodeType":"127","messageId":"128","endLine":9,"endColumn":41},{"ruleId":"125","severity":1,"message":"132","line":9,"column":43,"nodeType":"127","messageId":"128","endLine":9,"endColumn":48},{"ruleId":"125","severity":1,"message":"133","line":9,"column":50,"nodeType":"127","messageId":"128","endLine":9,"endColumn":54},{"ruleId":"125","severity":1,"message":"134","line":10,"column":8,"nodeType":"127","messageId":"128","endLine":10,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":42,"column":13,"nodeType":"137","endLine":42,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":77,"column":15,"nodeType":"137","endLine":77,"endColumn":50},{"ruleId":"125","severity":1,"message":"138","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":15},{"ruleId":"125","severity":1,"message":"130","line":2,"column":27,"nodeType":"127","messageId":"128","endLine":2,"endColumn":33},{"ruleId":"125","severity":1,"message":"132","line":2,"column":35,"nodeType":"127","messageId":"128","endLine":2,"endColumn":40},{"ruleId":"125","severity":1,"message":"139","line":2,"column":42,"nodeType":"127","messageId":"128","endLine":2,"endColumn":47},{"ruleId":"125","severity":1,"message":"140","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":24},{"ruleId":"125","severity":1,"message":"130","line":4,"column":27,"nodeType":"127","messageId":"128","endLine":4,"endColumn":33},{"ruleId":"125","severity":1,"message":"132","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":40},{"ruleId":"125","severity":1,"message":"131","line":4,"column":42,"nodeType":"127","messageId":"128","endLine":4,"endColumn":48},{"ruleId":"125","severity":1,"message":"130","line":4,"column":27,"nodeType":"127","messageId":"128","endLine":4,"endColumn":33},{"ruleId":"125","severity":1,"message":"132","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":40},{"ruleId":"125","severity":1,"message":"139","line":4,"column":42,"nodeType":"127","messageId":"128","endLine":4,"endColumn":47},{"ruleId":"125","severity":1,"message":"130","line":7,"column":27,"nodeType":"127","messageId":"128","endLine":7,"endColumn":33},{"ruleId":"125","severity":1,"message":"132","line":7,"column":35,"nodeType":"127","messageId":"128","endLine":7,"endColumn":40},{"ruleId":"125","severity":1,"message":"139","line":7,"column":42,"nodeType":"127","messageId":"128","endLine":7,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":162,"column":21,"nodeType":"143","endLine":162,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":242,"column":51,"nodeType":"146","messageId":"147","endLine":242,"endColumn":53},{"ruleId":"125","severity":1,"message":"130","line":6,"column":27,"nodeType":"127","messageId":"128","endLine":6,"endColumn":33},{"ruleId":"125","severity":1,"message":"132","line":6,"column":35,"nodeType":"127","messageId":"128","endLine":6,"endColumn":40},{"ruleId":"125","severity":1,"message":"131","line":6,"column":42,"nodeType":"127","messageId":"128","endLine":6,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":51,"column":43,"nodeType":"143","endLine":51,"endColumn":104},{"ruleId":"141","severity":1,"message":"142","line":52,"column":43,"nodeType":"143","endLine":52,"endColumn":120},{"ruleId":"148","severity":1,"message":"149","line":65,"column":9,"nodeType":"127","messageId":"150","endLine":65,"endColumn":11},{"ruleId":"148","severity":1,"message":"151","line":66,"column":9,"nodeType":"127","messageId":"150","endLine":66,"endColumn":11},{"ruleId":"148","severity":1,"message":"152","line":67,"column":9,"nodeType":"127","messageId":"150","endLine":67,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":32,"column":117,"nodeType":"155","messageId":"156","endLine":32,"endColumn":119},{"ruleId":"141","severity":1,"message":"142","line":53,"column":25,"nodeType":"143","endLine":53,"endColumn":37},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'CreateNewTask' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Sidebar' is defined but never used.","'Swich' is defined but never used.","'CreateNewproject' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'dd' is already defined.","redeclared","'mm' is already defined.","'yyyy' is already defined.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]