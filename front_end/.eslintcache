[{"/Users/Fatima/Desktop/Project3/front_end/src/index.js":"1","/Users/Fatima/Desktop/Project3/front_end/src/reportWebVitals.js":"2","/Users/Fatima/Desktop/Project3/front_end/src/App.js":"3","/Users/Fatima/Desktop/Project3/front_end/src/components/Sidebar.js":"4","/Users/Fatima/Desktop/Project3/front_end/src/components/SignUp.js":"5","/Users/Fatima/Desktop/Project3/front_end/src/components/Login.js":"6","/Users/Fatima/Desktop/Project3/front_end/src/components/project/DeletProject.js":"7","/Users/Fatima/Desktop/Project3/front_end/src/components/Home.js":"8","/Users/Fatima/Desktop/Project3/front_end/src/components/project/ProjectsList.js":"9","/Users/Fatima/Desktop/Project3/front_end/src/components/project/UpdateProject.js":"10","/Users/Fatima/Desktop/Project3/front_end/src/components/project/CreateNewproject.js":"11","/Users/Fatima/Desktop/Project3/front_end/src/components/project/ProjectDetails.js":"12","/Users/Fatima/Desktop/Project3/front_end/src/components/Member/Members.js":"13","/Users/Fatima/Desktop/Project3/front_end/src/apiConfig.js":"14","/Users/Fatima/Desktop/Project3/front_end/src/ApiConfig.js":"15"},{"size":478,"mtime":1611825161096,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611825161097,"results":"18","hashOfConfig":"17"},{"size":453,"mtime":1612154610021,"results":"19","hashOfConfig":"17"},{"size":4178,"mtime":1612188878883,"results":"20","hashOfConfig":"17"},{"size":3659,"mtime":1612178712619,"results":"21","hashOfConfig":"17"},{"size":2516,"mtime":1612189439558,"results":"22","hashOfConfig":"17"},{"size":500,"mtime":1612159677864,"results":"23","hashOfConfig":"17"},{"size":450,"mtime":1612154610022,"results":"24","hashOfConfig":"17"},{"size":1594,"mtime":1612159733542,"results":"25","hashOfConfig":"17"},{"size":2720,"mtime":1612159868083,"results":"26","hashOfConfig":"17"},{"size":5519,"mtime":1612160964049,"results":"27","hashOfConfig":"17"},{"size":6850,"mtime":1612159677756,"results":"28","hashOfConfig":"17"},{"size":1344,"mtime":1612159677864,"results":"29","hashOfConfig":"17"},{"size":289,"mtime":1612159671087,"results":"30","hashOfConfig":"17"},{"size":289,"mtime":1612159671087,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10anqqw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/Fatima/Desktop/Project3/front_end/src/index.js",[],["69","70"],"/Users/Fatima/Desktop/Project3/front_end/src/reportWebVitals.js",[],"/Users/Fatima/Desktop/Project3/front_end/src/App.js",[],"/Users/Fatima/Desktop/Project3/front_end/src/components/Sidebar.js",["71"],"/Users/Fatima/Desktop/Project3/front_end/src/components/SignUp.js",["72"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport Apiconfig from '../ApiConfig.js'\nimport Sidebar from \"./Sidebar\";\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n    }\n    this.changeUserName = this.changeUserName.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changepassword = this.changepassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  changeUserName = (event) => {\n    //change userName by user name that write it by user\n    this.setState({\n      userName: event.target.value,\n    });\n  };\n  //change changeEmail by user email that write it by user\n  changeEmail = (event) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n  //change changepassword by user password that write it by user\n  changepassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n  //after user Submit the data\n  onSubmit = (event) => {\n    /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\n    event.preventDefault();\n    //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\n    //we need to send that into back end all data from front into back end by axiod\n    const registered = {\n      userName: this.state.userName,\n      email: this.state.email,\n      password: this.state.password,\n    };\n    //we need to post that data into server\n    //post registered to this endPoint which back end (Schema) - to MongoDB\n    axios.post(`${Apiconfig}/signUp`, registered).then((res) => {\n      console.log(\"Response Data:\", res.data);\n      if (res.data === \"Already Exist\") {\n        alert('You Already have account please login')\n      }\n      if (res.data._message === 'User validation failed') {\n        alert('Error!!')\n      }\n      else {\n        alert('Welcome')\n        console.log(\"User Data\", registered);\n      }\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"form-div\">\n            <form onSubmit={this.onSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"User Name \"\n                onChange={(e) => {\n                  this.changeUserName(e);\n                }}\n                value={this.state.userName}\n                className=\"form-control-from-group\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Email \"\n                onChange={(e) => {\n                  this.changeEmail(e);\n                }}\n                value={this.state.email}\n                className=\"form-control-from-group\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password \"\n                onChange={(e) => {\n                  this.changepassword(e);\n                }}\n                value={this.state.password}\n                className=\"form-control-from-group\"\n              />\n              <input\n                type=\"submit\"\n                className=\"btn btn-danger btn-black\"\n                value=\"Sign Up\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","/Users/Fatima/Desktop/Project3/front_end/src/components/Login.js",["73"],"/Users/Fatima/Desktop/Project3/front_end/src/components/project/DeletProject.js",[],"/Users/Fatima/Desktop/Project3/front_end/src/components/Home.js",["74","75","76","77"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Swich, Link } from \"react-router-dom\";\nimport CreateNewproject from './project/CreateNewproject'\nimport ProjectsList from \"./project/ProjectsList\";\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>welcome</h1>\n      <Link to=\"/newProject\">New Project</Link>\n        <ProjectsList/>\n      </div>\n    \n      \n    );\n  }\n}\n","/Users/Fatima/Desktop/Project3/front_end/src/components/project/ProjectsList.js",["78","79","80"],"import React, { Component } from \"react\";\nimport API_URL from \"../../ApiConfig.js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Swich, Link } from \"react-router-dom\";\nimport ProjectDetails from \"./ProjectDetails\";\n\nclass ProjectsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projecs_list: [],\n      userId: \"60115b690ba0311c388c9aa5\"\n    };\n\n    // this.getProjectDetails = this.getProjectDetails.bind(this)\n  }\n  componentDidMount = () => {\n    this.getAllProject();\n  };\n  getAllProject = () => {\n    axios\n      .get(`${API_URL}/projects/${this.state.userId}`)\n      .then((res) => {\n        this.setState({ projecs_list: res.data });\n      })\n      .catch((error) => {\n        console.log(\"ERROR:\", error);\n      });\n  };\n\n  getProjectDetails = (projectId) => {\n    return (\n      <ProjectDetails projectId={projectId} />\n    )\n  }\n  render() {\n    // console.log(this.state.projecs_list);\n    const showAllProjectsList = this.state.projecs_list.map((projects) => {\n      console.log(projects._id);\n      return (\n        <div className='projectList'>\n          <p><Link to={{ pathname: \"/project/details\", state: { projectId: projects._id } }} onClick={() => this.getProjectDetails(projects._id)} >{projects.title}</Link></p>\n          {/* <p >{projects.title}</p> */}\n          {/* <p>member: {projects.members.length}</p> */}\n          {/* <p>{ task}</p> */}\n          {/* {proresspar} */}\n        </div>\n      );\n    });\n    return <div className=\"ProjectsList\">{showAllProjectsList}</div>;\n  }\n}\n\nexport default ProjectsList;\n","/Users/Fatima/Desktop/Project3/front_end/src/components/project/UpdateProject.js",["81","82","83"],"import React, { Component } from 'react';\nimport axios from 'axios'\nimport API_URL from \"../../ApiConfig\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nclass UpdateProject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projectid: props.location.state.id,\n            projectTitle: props.location.state.title,\n            projectStartDate: props.location.state.startDate,\n            projectEndDate: props.location.state.endDate\n        }\n    }\n\n    getChangeData = (event) => {\n        let fieldName = event.target.name;\n        this.setState({\n            [fieldName]: event.target.value\n        })\n        console.log(this.state[fieldName]);\n    }\n\n    saveChnages = (event) => {\n        event.preventDefault();\n        const newData = {\n            \"title\": this.state.projectTitle,\n            \"startDate\": this.state.projectStartDate,\n            \"endDate\": this.state.projectEndDate\n        };\n        axios.patch(`${API_URL}/project/${this.state.projectid}`, newData)\n            .then(res => {\n                console.log('Response Data:', res.data)\n            })\n            .catch(error => {\n                console.log(\"ERROR:\", error);\n            })\n    }\n\n    render() {\n        console.log(this.state.projectEndDate);\n        return (\n            <div className=\"UpdateProject\">\n                <form onSubmit={this.saveChnages}>\n                    <fieldset>\n                        <label>Update Project Details</label>\n                        <div class=\"form-group\">\n                            <label>Project title</label>\n                            <input type=\"text\" name=\"projectTitle\" class=\"form-control\" defaultValue={this.state.projectTitle} onChange={this.getChangeData} />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Start Date</label>\n                            <input type=\"date\" name=\"projectStartDate\" class=\"form-control\" defaultValue={this.state.projectStartDate} onChange={this.getChangeData} />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>End Date</label>\n                            <input type=\"date\" class=\"form-control\" name=\"projectEndDate\" defaultValue={this.state.projectEndDate} onChange={this.getChangeData} />\n                        </div>\n                        <Link to=\"/\" className=\"btn btn-default\">Cancel</Link>\n                        <button type=\"submit\" className=\"btn btn-success\" >Save</button>\n                    </fieldset>\n                </form>\n            </div >\n        );\n    }\n}\n\nexport default UpdateProject;\n","/Users/Fatima/Desktop/Project3/front_end/src/components/project/CreateNewproject.js",["84","85"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Sidebar from \"../Sidebar.js\";\nimport Apiconfig from '../../ApiConfig'\nexport default class CreateNewproject extends Component {\n    constructor() {\n        super();\n        //projects\n        this.state = {\n            title: '',\n            members: '',\n            role: '',\n            startDate: '',\n            endDate: '',\n            status: '',\n            userEmail: '',\n            members: []\n\n        };\n\n    }\n    //after user Submit the data\n    onSubmit = (e) => {\n        //The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\n        e.preventDefault();\n\n        //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\n        //we need to send that into back end all data from front into back end by axios\n        const newProject = {\n            title: this.state.title,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n        };\n        //we need to post that data into server\n        //post registered to this endPoint which back end (Schema) - to MongoDB\n        axios.post(`${Apiconfig}/project/new`, newProject).then((res) => {\n            alert('Project added successfully')\n            console.log(\"Project Data:\", newProject);\n        });\n\n\n    }\n    //Add user into Project\n    AddUser = (e) => {\n        //The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\n        e.preventDefault()\n        let copyMembers = [...this.state.members]\n        axios.post(`${Apiconfig}/users`, this.state.userEmail).then((res) => {\n            if (res.data === 'Already Exist') {\n                console.log('Email:', this.state.userEmail)\n                alert(this.state.userEmail + 'added successfully')\n                copyMembers.push(this.state.userEmail)\n                this.setState({members:copyMembers})\n            }\n            else {\n                alert(this.state.userEmail + ' Error! invalid emai')\n            }\n        });\n    }\n\n    //updateProject\n    updateProject = () => {\n        axios.put(`${Apiconfig}/addMembers/${this.state.title}`, {members:this.state.members}).then((res) => {\n            console.log(res)\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <h4>New Project</h4>\n                    <form onSubmit={this.onSubmit}>\n                        <label for=\"ProjectName\">Project Name :</label>\n                        <input\n                            type=\"text\"\n                            onChange={(e) => {\n                                this.setState({\n                                    title: e.target.value,\n                                });\n                            }}\n                            value={this.state.title}\n                            className=\"form-control-from-group\"\n                        />\n                        <br />\n                        <label for=\"startDate \">Start Date :</label>\n\n                        <input type=\"date\" name=\"start date\" onChange={(e) => {\n                            this.setState({\n                                startDate: e.target.value,\n                            });\n                        }} value={this.state.startDate}\n                        />\n\n                        <label for=\"EndDate\">End Date :</label>\n                        <input type=\"date\" name=\"end date\" onChange={(e) => {\n                            this.setState({\n                                endDate: e.target.value,\n                            });\n                        }} value={this.state.endDate} />\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-danger btn-black\"\n                            value=\"Submit\"\n                        />\n                    </form>\n                    <form onSubmit={this.AddUser}>\n                        <h4>Add Project Team</h4>\n\n                        <label for=\"addUser\">User Email:</label>\n                        <input type=\"email\" onChange={(e) => {\n                            this.setState({\n                                userEmail: e.target.value,\n                            });\n                        }} value={this.state.userEmail} />\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-danger btn-black\"\n                            value=\"Add\"\n                        />\n\n\n\n                    </form>\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-danger btn-black\"\n                        value=\"Update Project\" onClick={this.updateProject}\n                    />\n                </div>            </div>\n\n\n        )\n    }\n}\n","/Users/Fatima/Desktop/Project3/front_end/src/components/project/ProjectDetails.js",["86","87","88","89","90","91","92"],"import React, { Component } from 'react';\nimport API_URL from \"../../apiConfig\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Members from '../Member/Members';\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"../../App.css\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nclass ProjectDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //projecs_list\n            projecsDetails: {},\n            memberDetails: [],\n            projecsId: props.location.state.projectId,\n            userLoggedInId: '60115b690ba0311c388c9aa8'\n        };\n    }\n    componentDidMount = () => {\n        this.getProjectById();\n        this.getAllmembers(\"60115b690ba0311c388c9aa0\");\n    };\n\n    getAllmembers = (userId) => {\n        axios\n            .get(`${API_URL}/users`)\n            .then((res) => {\n                this.setState({ memberDetails: res.data });\n            })\n            .catch((error) => {\n                console.log(\"ERROR:\", error);\n            });\n        // return (<td>this.state.memberDetails.userName</td>)\n    }\n\n    // getMemberDetails = (userId) => {\n    //     let userName = '';\n    //     this.state.memberDetails.map(member => {\n    //         if (member._id === userId) {\n    //             userName = member.userName;\n    //         }\n    //         // console.log(member._id == userId);\n    //     });\n    //     return userName;\n    // }\n    getProjectById = () => {\n        axios\n            .get(`${API_URL}/project/${this.state.projecsId}`)\n            .then((res) => {\n                this.setState({ projecsDetails: res.data[0] });\n            })\n            .catch((error) => {\n                console.log(\"ERROR:\", error);\n            });\n    };\n\n    deleteMember = (index) => {\n        console.log(index);\n        // axios\n        //     .get(`${API_URL}/projects/${this.state.projecsId}`)\n        //     .then((res) => {\n        //         this.setState({ projecsDetails: res.data });\n        //     })\n        //     .catch((error) => {\n        //         console.log(\"ERROR:\", error);\n        //     });\n    }\n\n    render() {\n        // const { id } = this.props.match.params\n        // console.log(this.props.location.state.projectId);\n        // const Photo = ({ location }) => {\n        //     const { state = {} } = location;\n        //     const { projecsId } = state;\n        //     console.log(projecsId);\n        // }\n\n        // console.log(Photo());\n        const getDetails = this.state.projecsDetails.members;\n        // console.log(getDetails);\n        const showAllProjectsDetails = getDetails !== undefined ? getDetails.length !== 0 ? getDetails.map((member) => {\n            // console.log(this.getMemberDetails(member.userId));\n            return (\n                <tr>\n                    {member.userId === this.state.userLoggedInId && member.role === 'manager' ?\n                        <td>Your Tasks</td>\n                        : (\n                            <Members userId={member.userId} />\n                        )}\n                    <td>{this.state.projecsDetails.title}</td>\n                    <td>{this.state.projecsDetails.title}</td>\n                    <td onClick={() => this.deleteMember(member.userId)}><i className=\"fa fa-trash-alt\"><a href=\"#\">delete</a></i></td>\n                    {/* <p>member: {projects.members.length}</p> */}\n                    {/* <p>{ task}</p> */}\n                    {/* {proresspar} */}\n\n                </tr>\n            );\n        }) : \"\" : \"\";\n        console.log(\"data response: \", this.state.projecsDetails.startDate);\n        console.log(\"data response: \", this.state.projecsDetails);\n        // const datas = typeof this.state.projecsDetails.startDate;\n        // console.log(\"data response: \", datas);\n        // console.log(\"date \", dateFormat(this.state.projecsDetails.endDate, 'yyyy-MM-dd'));\n        // console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(today));\n        // var dd = String(this.state.projecsDetails.startDate.getDate()).padStart(2, '0');\n        // console.log(dd);\n        var startDate = new Date(this.state.projecsDetails.startDate);\n        var dd = String(startDate.getDate() + 1).padStart(2, '0');\n        var mm = String(startDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = startDate.getFullYear();\n\n        startDate = yyyy + '-' + mm + '-' + dd;\n        console.log(startDate);\n\n        var endtDate = new Date(this.state.projecsDetails.endDate);\n        var dd = String(endtDate.getDate() + 1).padStart(2, '0');\n        var mm = String(endtDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = endtDate.getFullYear();\n\n        endtDate = yyyy + '-' + mm + '-' + dd;\n        console.log(endtDate);\n        // const startDate = dates;\n        // const startDate = moment(this.state.projecsDetails.startDate).format(\"YYYY-MM-DD\").toString()\n        // console.log(\"data with moment library: \", startDate);\n        // const endtDate = dateFormat(this.state.projecsDetails.endDate, 'yyyy-mm-dd').toString()\n        // console.log(date);\n        // console.log(startDate);\n        // return getYear.getFullYear();\n        return (\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <span>{this.state.projecsDetails.title}</span>\n                        <Link to={{\n                            pathname: \"/project/update\", state: {\n                                id: this.state.projecsDetails._id,\n                                title: this.state.projecsDetails.title,\n                                startDate: startDate,\n                                endDate: endtDate\n                            }\n                        }}><i className=\"fa fa-edit\"></i></Link>\n                    </div>\n                    <div className=\"card-body\">\n\n                        {/* <p>{this.state.projecsDetails.startDate}</p> */}\n                        <p>Start Date: {startDate}</p>\n                        <p>End Date: {endtDate}</p>\n                        {/* <i onClick={this.editProjectDetails}>edit</i> */}\n\n                        <table className=\"table\">\n                            <tr>\n                                <th>Team Members</th>\n                                <th>Tasks</th>\n                                <th>status</th>\n                                <th></th>\n                            </tr>\n                            {showAllProjectsDetails}\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ProjectDetails;\n","/Users/Fatima/Desktop/Project3/front_end/src/components/Member/Members.js",[],"/Users/Fatima/Desktop/Project3/front_end/src/apiConfig.js",[],"/Users/Fatima/Desktop/Project3/front_end/src/ApiConfig.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":20},{"ruleId":"97","severity":1,"message":"101","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":33},{"ruleId":"97","severity":1,"message":"104","line":2,"column":35,"nodeType":"99","messageId":"100","endLine":2,"endColumn":40},{"ruleId":"97","severity":1,"message":"105","line":2,"column":42,"nodeType":"99","messageId":"100","endLine":2,"endColumn":47},{"ruleId":"97","severity":1,"message":"106","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":4,"column":27,"nodeType":"99","messageId":"100","endLine":4,"endColumn":33},{"ruleId":"97","severity":1,"message":"104","line":4,"column":35,"nodeType":"99","messageId":"100","endLine":4,"endColumn":40},{"ruleId":"97","severity":1,"message":"105","line":4,"column":42,"nodeType":"99","messageId":"100","endLine":4,"endColumn":47},{"ruleId":"97","severity":1,"message":"103","line":4,"column":27,"nodeType":"99","messageId":"100","endLine":4,"endColumn":33},{"ruleId":"97","severity":1,"message":"104","line":4,"column":35,"nodeType":"99","messageId":"100","endLine":4,"endColumn":40},{"ruleId":"97","severity":1,"message":"107","line":4,"column":42,"nodeType":"99","messageId":"100","endLine":4,"endColumn":48},{"ruleId":"97","severity":1,"message":"101","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":18,"column":13,"nodeType":"110","messageId":"111","endLine":18,"endColumn":20},{"ruleId":"97","severity":1,"message":"103","line":8,"column":27,"nodeType":"99","messageId":"100","endLine":8,"endColumn":33},{"ruleId":"97","severity":1,"message":"104","line":8,"column":35,"nodeType":"99","messageId":"100","endLine":8,"endColumn":40},{"ruleId":"97","severity":1,"message":"107","line":8,"column":42,"nodeType":"99","messageId":"100","endLine":8,"endColumn":48},{"ruleId":"112","severity":1,"message":"113","line":93,"column":105,"nodeType":"114","endLine":93,"endColumn":117},{"ruleId":"115","severity":1,"message":"116","line":118,"column":13,"nodeType":"99","messageId":"117","endLine":118,"endColumn":15},{"ruleId":"115","severity":1,"message":"118","line":119,"column":13,"nodeType":"99","messageId":"117","endLine":119,"endColumn":15},{"ruleId":"115","severity":1,"message":"119","line":120,"column":13,"nodeType":"99","messageId":"117","endLine":120,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'ProjectsList' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'Apiconfig' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Swich' is defined but never used.","'CreateNewproject' is defined but never used.","'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'members'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'dd' is already defined.","redeclared","'mm' is already defined.","'yyyy' is already defined.","no-global-assign","no-unsafe-negation"]